---
# tasks file for jenkins-install

- block: # =============== Block for Ubuntu =================

    - name: New user 'majordomo' with a primary group of 'admin'
      ansible.builtin.user:
        name: majordomo
        comment: MajorDoMo user
        group: admin

    - name: Install utils
      apt:
        pkg:
          - nano
          - wget
          - unzip
          - python3-pip

    - name: Install PyMySQL
      pip:
        name: pymysql
        state: present

    - name: Install MySQL
      apt:
        pkg:
          - mysql-server
          - mysql-client
          - apache2
          - apache2-utils
          - php
          - php-cgi
          - php-cli
          - php-pear
          - php-mysql
          - php-mbstring
          - php-xml
          - curl
          - libcurl4
          #          - libcurl4-dev
          - php-curl
          - libapache2-mod-php
          - phpmyadmin

    - name: MajorDoMo. Create directory
      file:
        path: /home/majordomo/apache/logs
        state: directory

    - name: Template a file to /root/.my.cnf
      ansible.builtin.template:
        src: ../templates/my.cnf.j2
        dest: /root/.my.cnf
        mode: '0644'
#    - name: Template a file to /majordomo/.my.cnf
#      ansible.builtin.template:
#        src: ../templates/my.cnf.majordomo.j2
#        dest: /home/majordomo/.my.cnf
#        mode: '0644'

    - name: Create new database 'db_terminal'
      community.mysql.mysql_db:
        name:
          - db_terminal
        login_unix_socket: /var/run/mysqld/mysqld.sock
        login_host: 'localhost'
        login_user: 'root'
        login_password: '{{mysql_root_password}}'
        state: present

    # mysql_secure_installation
    - name: MySQL Secure Installation
      mysql_user:
        name: 'root'
        host_all: yes
        password: '{{mysql_root_password}}'
        login_host: 'localhost'
        login_user: 'root'
        login_password: '{{mysql_root_password}}'
        state: present

    - name: Removes MajorDomo user
      community.mysql.mysql_user:
        name: '{{mysql_majordomo_user}}'
        host_all: yes
        state: absent

    # MySQL MajorDomo user
#    - name: MySQL MajorDomo user
#      mysql_user:
#       name: '{{mysql_majordomo_user}}'
#       host_all: yes
#       password: '{{mysql_root_password}}'
#       login_host: 'localhost'
#       login_user: '{{mysql_majordomo_user}}'
#       login_password: '{{mysql_root_password}}'
#       priv: '*.*:ALL'
#       state: present

    - name: Create database user MajorDomo with all database privileges
      community.mysql.mysql_user:
        name: '{{mysql_majordomo_user}}'
        password: '{{mysql_root_password}}'
        priv: '*.*:ALL'
        state: present

    - name: Template Apache settings
      ansible.builtin.template:
        src: ../templates/apache.default.conf.j2
        dest: /etc/apache2/sites-available/000-default.conf
        mode: '0644'

    - name: Remove default index.html file
      ansible.builtin.file:
        path: /var/www/html/index.html
        state: absent

    - name: Restart Apache
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - apache2

    - name: Set ServerName localhost
      ansible.builtin.lineinfile:
        path: /etc/apache2/apache2.conf
        regexp: '^ServerName '
        line: 'ServerName localhost'

#    - name: Set PHP short_open_tag = On
#      ansible.builtin.lineinfile:
#        path: /etc/php/{{php_version}}/apache2/php.ini
#        regexp: '^short_open_tag '
#        line: 'short_open_tag = On'

    - name: a2enmod rewrite
      shell: "a2enmod rewrite"

#    - name: Set error_reporting  =  E_ALL & ~E_NOTICE
#        ansible.builtin.lineinfile:
#          path: /etc/php/{{php_version}}/apache2/php.ini
#          regexp: '^error_reporting '
#          line: 'error_reporting  =  E_ALL & ~E_NOTICE'
#
#    - name: Set max_execution_time = 90
#        ansible.builtin.lineinfile:
#          path: /etc/php/{{php_version}}/apache2/php.ini
#          regexp: '^error_reporting '
#          line: 'max_execution_time '

    - name: Template PHP settings
      ansible.builtin.template:
        src: ../templates/php.ini.j2
        dest: /etc/php/{{php_version}}/apache2/php.ini
        mode: '0644'

    - name: Restart Apache
      service:
        name: "{{ item }}"
        state: restarted
      with_items:
        - apache2


    - name: MajorDoMo. Create directory
      file:
        path: "{{ item }}"
        state: directory
        mode: '0777'
      with_items:
        - '/home/majordomo/distr'
        - '/home/majordomo/distr/master'


    - name: MajorDoMo. Download distr
      get_url:
        url: https://github.com/sergejey/majordomo/archive/master.zip
        dest: /home/majordomo/distr/master.zip
        mode: '0777'

    - name: Extract distr
      ansible.builtin.unarchive:
        src: /home/majordomo/distr/master.zip
        dest: /home/majordomo/distr/master
        remote_src: yes

    - name: distr to WWW
      copy:
        src: '{{ item }}'
        dest: /var/www/html
      with_items:
        - /home/majordomo/distr/master/majordomo-master/*
        - /home/majordomo/distr/master/majordomo-master/.htaccess

    - name: MajorDoMo. Create directory
      file:
        path: /home/majordomo/distr
        state: absent